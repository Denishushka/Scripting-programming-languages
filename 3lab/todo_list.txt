Что такое SQLite и в чем его основные особенности? SQLite — это легковесная, встраиваемая реляционная база данных, которая не требует серверного ПО и работает прямо в приложении. Основные особенности SQLite:
Встроенная база данных, которая работает как обычный файл.
Простой механизм использования.
Поддерживает SQL запросы.
Нет необходимости в установке отдельного сервера или настройке сети.

Какие типы данных поддерживаются в SQLite? SQLite поддерживает следующие основные типы данных:
NULL: пустое значение.
INTEGER: целое число.
REAL: число с плавающей точкой.
TEXT: строковые данные.
BLOB: бинарные данные.

Как выполнить SQL-запрос на создание таблицы в базе данных SQLite? Для создания таблицы в SQLite используется следующий запрос:
sql
Копировать код
CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT NOT NULL
);
В этом примере создается таблица users с полями id, name, и email.

Как добавить запись в таблицу базы данных SQLite? Приведите пример SQL-запроса. Чтобы добавить запись в таблицу, используется запрос INSERT INTO:
sql
Копировать код
INSERT INTO users (name, email) 
VALUES ('John Doe', 'john@example.com');

Какие существуют способы вставки нескольких записей в таблицу SQLite за одно выполнение запроса? Можно вставить несколько записей за один запрос, указав их через запятую:
sql
Копировать код
INSERT INTO users (name, email) 
VALUES 
    ('John Doe', 'john@example.com'),
    ('Jane Smith', 'jane@example.com'),
    ('Alice Johnson', 'alice@example.com');

Как выбрать все записи из таблицы SQLite? Напишите пример SQL-запроса для выборки всех данных. Для выборки всех записей из таблицы используется запрос SELECT:
sql
Копировать код
SELECT * FROM users;

Как реализовать выборку записей с определенными условиями (например, по значению определенного поля)? Приведите пример SQL-запроса. Для выборки записей с условиями используется оператор WHERE:
sql
Копировать код
SELECT * FROM users WHERE email = 'john@example.com';

Как обновить существующую запись в таблице SQLite? Приведите пример SQL-запроса для обновления записи. Для обновления записи используется оператор UPDATE:
sql
Копировать код
UPDATE users
SET email = 'new_email@example.com'
WHERE id = 1;

Как удалить запись из таблицы SQLite? Приведите пример SQL-запроса. Для удаления записи используется оператор DELETE:
sql
Копировать код
DELETE FROM users WHERE id = 1;

Как закрыть соединение с базой данных в SQLite? Почему это важно? В Python можно закрыть соединение с базой данных с помощью метода close():
python
Копировать код
conn.close()
Это важно, чтобы освободить ресурсы и избежать утечек памяти.

Что такое "первичный ключ" (Primary Key) и как он используется в таблицах SQLite? Первичный ключ — это столбец или комбинация столбцов, значения которых уникальны для каждой строки в таблице. Он используется для идентификации каждой записи. В SQLite это может быть обычный столбец с уникальными значениями или автоматический номер с использованием INTEGER PRIMARY KEY.

Как использовать транзакции при работе с SQLite в Python и для чего они нужны? Транзакции используются для группировки нескольких операций, чтобы они выполнялись как единое целое. В SQLite транзакцию можно начать с BEGIN, затем выполнить несколько запросов, и завершить с COMMIT. Если транзакция неудачна, можно использовать ROLLBACK для отката изменений:
python
Копировать код
conn = sqlite3.connect('database.db')
cursor = conn.cursor()
try:
    cursor.execute("BEGIN TRANSACTION;")
    cursor.execute("INSERT INTO users (name, email) VALUES ('John', 'john@example.com')")
    conn.commit()
except Exception as e:
    conn.rollback()
finally:
    conn.close()

В чем заключается разница между операторами SQL INSERT и UPDATE?
INSERT используется для добавления новых записей в таблицу.
UPDATE используется для изменения существующих записей в таблице.

Как можно организовать обработку больших объемов данных в SQLite без перегрузки памяти? Для обработки больших объемов данных можно использовать методы, такие как:
Обработка данных по частям с помощью лимита (LIMIT).
Использование транзакций для группировки запросов.
Обработка данных в цикле с использованием курсоров.

Что такое индексы в базе данных и зачем они используются? Как создать индекс в SQLite? Индексы в базе данных ускоряют поиск данных. Они создаются на одном или нескольких столбцах, чтобы повысить производительность запросов. Пример создания индекса:
sql
Копировать код
CREATE INDEX idx_user_email ON users (email);
Индексы используются для ускорения операций выборки, но могут замедлить вставку и обновление данных.